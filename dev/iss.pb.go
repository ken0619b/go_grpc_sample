// Code generated by protoc-gen-go. DO NOT EDIT.
// source: iss.proto

package iss

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LocRequest struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocRequest) Reset()         { *m = LocRequest{} }
func (m *LocRequest) String() string { return proto.CompactTextString(m) }
func (*LocRequest) ProtoMessage()    {}
func (*LocRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4352da8c8d17a2a0, []int{0}
}

func (m *LocRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocRequest.Unmarshal(m, b)
}
func (m *LocRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocRequest.Marshal(b, m, deterministic)
}
func (m *LocRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocRequest.Merge(m, src)
}
func (m *LocRequest) XXX_Size() int {
	return xxx_messageInfo_LocRequest.Size(m)
}
func (m *LocRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LocRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LocRequest proto.InternalMessageInfo

func (m *LocRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type LocReply struct {
	Longitude            string   `protobuf:"bytes,1,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude             string   `protobuf:"bytes,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocReply) Reset()         { *m = LocReply{} }
func (m *LocReply) String() string { return proto.CompactTextString(m) }
func (*LocReply) ProtoMessage()    {}
func (*LocReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4352da8c8d17a2a0, []int{1}
}

func (m *LocReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocReply.Unmarshal(m, b)
}
func (m *LocReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocReply.Marshal(b, m, deterministic)
}
func (m *LocReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocReply.Merge(m, src)
}
func (m *LocReply) XXX_Size() int {
	return xxx_messageInfo_LocReply.Size(m)
}
func (m *LocReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LocReply.DiscardUnknown(m)
}

var xxx_messageInfo_LocReply proto.InternalMessageInfo

func (m *LocReply) GetLongitude() string {
	if m != nil {
		return m.Longitude
	}
	return ""
}

func (m *LocReply) GetLatitude() string {
	if m != nil {
		return m.Latitude
	}
	return ""
}

func init() {
	proto.RegisterType((*LocRequest)(nil), "iss.LocRequest")
	proto.RegisterType((*LocReply)(nil), "iss.LocReply")
}

func init() { proto.RegisterFile("iss.proto", fileDescriptor_4352da8c8d17a2a0) }

var fileDescriptor_4352da8c8d17a2a0 = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcc, 0x2c, 0x2e, 0xd6,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xce, 0x2c, 0x2e, 0x56, 0x52, 0xe3, 0xe2, 0xf2, 0xc9,
	0x4f, 0x0e, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92, 0xe0, 0x62, 0xcf, 0x4d, 0x2d, 0x2e,
	0x4e, 0x4c, 0x4f, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x71, 0x95, 0x5c, 0xb8, 0x38,
	0xc0, 0xea, 0x0a, 0x72, 0x2a, 0x85, 0x64, 0xb8, 0x38, 0x73, 0xf2, 0xf3, 0xd2, 0x33, 0x4b, 0x4a,
	0x53, 0x60, 0xea, 0x10, 0x02, 0x42, 0x52, 0x5c, 0x1c, 0x39, 0x89, 0x25, 0x10, 0x49, 0x26, 0xb0,
	0x24, 0x9c, 0x6f, 0x64, 0xc9, 0xc5, 0xed, 0x93, 0x9f, 0xec, 0x92, 0x5a, 0x92, 0x9a, 0x5c, 0x92,
	0x5f, 0x24, 0xa4, 0xc5, 0xc5, 0xe6, 0x9e, 0x5a, 0xe2, 0x93, 0x9f, 0x2c, 0xc4, 0xaf, 0x07, 0x72,
	0x17, 0xc2, 0x25, 0x52, 0xbc, 0x08, 0x81, 0x82, 0x9c, 0x4a, 0x25, 0x86, 0x24, 0x36, 0xb0, 0xa3,
	0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x09, 0xc9, 0xce, 0x6e, 0xc1, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LocDetectorClient is the client API for LocDetector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LocDetectorClient interface {
	// Sends a greeting
	// rpc SayHello (HelloRequest) returns (HelloReply) {}
	GetLoc(ctx context.Context, in *LocRequest, opts ...grpc.CallOption) (*LocReply, error)
}

type locDetectorClient struct {
	cc *grpc.ClientConn
}

func NewLocDetectorClient(cc *grpc.ClientConn) LocDetectorClient {
	return &locDetectorClient{cc}
}

func (c *locDetectorClient) GetLoc(ctx context.Context, in *LocRequest, opts ...grpc.CallOption) (*LocReply, error) {
	out := new(LocReply)
	err := c.cc.Invoke(ctx, "/iss.LocDetector/GetLoc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LocDetectorServer is the server API for LocDetector service.
type LocDetectorServer interface {
	// Sends a greeting
	// rpc SayHello (HelloRequest) returns (HelloReply) {}
	GetLoc(context.Context, *LocRequest) (*LocReply, error)
}

func RegisterLocDetectorServer(s *grpc.Server, srv LocDetectorServer) {
	s.RegisterService(&_LocDetector_serviceDesc, srv)
}

func _LocDetector_GetLoc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LocRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocDetectorServer).GetLoc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iss.LocDetector/GetLoc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocDetectorServer).GetLoc(ctx, req.(*LocRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LocDetector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "iss.LocDetector",
	HandlerType: (*LocDetectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLoc",
			Handler:    _LocDetector_GetLoc_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "iss.proto",
}
